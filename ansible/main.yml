# This should be your Ansible playbooks to provision your containers.
# An inventory will be automatically created using the names of the services
# from your container.yml file.
# Add any roles or other modules you'll need to this directory too.
# For many examples of roles, check out Ansible Galaxy: https://galaxy.ansible.com/
#
---
- name: Raw Setup
  hosts: build-slave
  gather_facts: false
  tasks:
    - name: install python
      raw: which python || yum -y update && yum install -y python
    - name: get some facts
      setup:

- name: Prepare Jenkins environment
  hosts: build-slave
  tasks:
    - name: ensure jdk is present
      package:
        name: java-1.8.0-openjdk.x86_64
        state: present

    - name: Update jenkins user
      user:
        name: jenkins
        home: /home/jenkins
        state: present
        password: $6$9WIT0iLEtXn0y$R4iU5cWmEyFPoCZJMkyrrilXBZr4WxPgWqDBOwlRQ7rYovTIFvLHbuipOrXr6hTyASKl57YG6Pj0gwrUCR2/H.
    - name: add keys to the authorized keys
      authorized_key:
        user: root
        key: https://github.com/{{ item }}.keys
        validate_certs: False
      with_items:
        - brucellino
        - jenkinssagrid

    - name: install sshd
      package:
        name: openssh-server
        state: present
    - name: generate host keys
      command: "ssh-keygen -f /etc/ssh/ssh_host_{{item }}_key -N '' -t {{ item }}"
      args:
        creates: "/etc/ssh/ssh_host_{{item }}_key"
      with_items:
        - rsa
        - dsa
        - ecdsa

    - name: ensure run dir present
      file:
        dest: /var/run/sshd
        state: directory
        owner: root

    - name: Replace the pam login
      lineinfile:
        dest: /etc/pam.d/sshd
        line: "session    optional     pam_loginuid.so"
        regexp: "session    required     pam_loginuid.so"
        state: present

- name: CODE-RADE secret sauce
  hosts: build-slave
  tasks:
  - name: install prerequisites
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - git
      - environment-modules
      - wget
      - bzip2
      - vim
      - which
      - tree
  - name: Install Vanilla compiler (RedHat)
    yum:
      name: '@Development tools'
      state: present
    when: ansible_os_family == 'RedHat'

  - name: Install Vanilla compiler (Debian)
    apt:
      name: build-essential
      state: present
    when: "{{ ansible_os_family == 'Debian'}}"

  - name: Push the modules
    copy:
      src: "files/usr/share/Modules/modulefiles/{{ item }}"
      dest: "/usr/share/Modules/modulefiles/{{ item }}"
    with_items:
      - ci
      - deploy
